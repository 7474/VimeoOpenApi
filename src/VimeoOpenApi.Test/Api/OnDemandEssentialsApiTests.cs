/* 
 * Vimeo API
 *
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using VimeoOpenApi.Client;
using VimeoOpenApi.Api;
using VimeoOpenApi.Model;

namespace VimeoOpenApi.Test
{
    /// <summary>
    ///  Class for testing OnDemandEssentialsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OnDemandEssentialsApiTests : IDisposable
    {
        private OnDemandEssentialsApi instance;

        public OnDemandEssentialsApiTests()
        {
            instance = new OnDemandEssentialsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OnDemandEssentialsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OnDemandEssentialsApi
            //Assert.IsType(typeof(OnDemandEssentialsApi), instance, "instance is a OnDemandEssentialsApi");
        }

        
        /// <summary>
        /// Test CreateVod
        /// </summary>
        [Fact]
        public void CreateVodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal userId = null;
            //InlineObject45 inlineObject45 = null;
            //var response = instance.CreateVod(userId, inlineObject45);
            //Assert.IsType<OnDemandPage> (response, "response is OnDemandPage");
        }
        
        /// <summary>
        /// Test CreateVodAlt1
        /// </summary>
        [Fact]
        public void CreateVodAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InlineObject21 inlineObject21 = null;
            //var response = instance.CreateVodAlt1(inlineObject21);
            //Assert.IsType<OnDemandPage> (response, "response is OnDemandPage");
        }
        
        /// <summary>
        /// Test DeleteVodDraft
        /// </summary>
        [Fact]
        public void DeleteVodDraftTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal ondemandId = null;
            //instance.DeleteVodDraft(ondemandId);
            
        }
        
        /// <summary>
        /// Test EditVod
        /// </summary>
        [Fact]
        public void EditVodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal ondemandId = null;
            //InlineObject30 inlineObject30 = null;
            //var response = instance.EditVod(ondemandId, inlineObject30);
            //Assert.IsType<OnDemandPage> (response, "response is OnDemandPage");
        }
        
        /// <summary>
        /// Test GetUserVods
        /// </summary>
        [Fact]
        public void GetUserVodsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal userId = null;
            //string direction = null;
            //string filter = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string sort = null;
            //var response = instance.GetUserVods(userId, direction, filter, page, perPage, sort);
            //Assert.IsType<List<OnDemandPage>> (response, "response is List<OnDemandPage>");
        }
        
        /// <summary>
        /// Test GetUserVodsAlt1
        /// </summary>
        [Fact]
        public void GetUserVodsAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string direction = null;
            //string filter = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string sort = null;
            //var response = instance.GetUserVodsAlt1(direction, filter, page, perPage, sort);
            //Assert.IsType<List<OnDemandPage>> (response, "response is List<OnDemandPage>");
        }
        
        /// <summary>
        /// Test GetVod
        /// </summary>
        [Fact]
        public void GetVodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal ondemandId = null;
            //var response = instance.GetVod(ondemandId);
            //Assert.IsType<OnDemandPage> (response, "response is OnDemandPage");
        }
        
    }

}
