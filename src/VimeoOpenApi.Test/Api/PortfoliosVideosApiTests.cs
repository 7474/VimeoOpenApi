/* 
 * Vimeo API
 *
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using VimeoOpenApi.Client;
using VimeoOpenApi.Api;
using VimeoOpenApi.Model;

namespace VimeoOpenApi.Test
{
    /// <summary>
    ///  Class for testing PortfoliosVideosApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PortfoliosVideosApiTests : IDisposable
    {
        private PortfoliosVideosApi instance;

        public PortfoliosVideosApiTests()
        {
            instance = new PortfoliosVideosApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PortfoliosVideosApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PortfoliosVideosApi
            //Assert.IsType(typeof(PortfoliosVideosApi), instance, "instance is a PortfoliosVideosApi");
        }

        
        /// <summary>
        /// Test AddVideoToPortfolio
        /// </summary>
        [Fact]
        public void AddVideoToPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal portfolioId = null;
            //decimal userId = null;
            //decimal videoId = null;
            //instance.AddVideoToPortfolio(portfolioId, userId, videoId);
            
        }
        
        /// <summary>
        /// Test AddVideoToPortfolioAlt1
        /// </summary>
        [Fact]
        public void AddVideoToPortfolioAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal portfolioId = null;
            //decimal videoId = null;
            //instance.AddVideoToPortfolioAlt1(portfolioId, videoId);
            
        }
        
        /// <summary>
        /// Test DeleteVideoFromPortfolio
        /// </summary>
        [Fact]
        public void DeleteVideoFromPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal portfolioId = null;
            //decimal userId = null;
            //decimal videoId = null;
            //instance.DeleteVideoFromPortfolio(portfolioId, userId, videoId);
            
        }
        
        /// <summary>
        /// Test DeleteVideoFromPortfolioAlt1
        /// </summary>
        [Fact]
        public void DeleteVideoFromPortfolioAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal portfolioId = null;
            //decimal videoId = null;
            //instance.DeleteVideoFromPortfolioAlt1(portfolioId, videoId);
            
        }
        
        /// <summary>
        /// Test GetPortfolioVideo
        /// </summary>
        [Fact]
        public void GetPortfolioVideoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal portfolioId = null;
            //decimal userId = null;
            //decimal videoId = null;
            //var response = instance.GetPortfolioVideo(portfolioId, userId, videoId);
            //Assert.IsType<Video> (response, "response is Video");
        }
        
        /// <summary>
        /// Test GetPortfolioVideoAlt1
        /// </summary>
        [Fact]
        public void GetPortfolioVideoAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal portfolioId = null;
            //decimal videoId = null;
            //var response = instance.GetPortfolioVideoAlt1(portfolioId, videoId);
            //Assert.IsType<Video> (response, "response is Video");
        }
        
        /// <summary>
        /// Test GetPortfolioVideos
        /// </summary>
        [Fact]
        public void GetPortfolioVideosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal portfolioId = null;
            //decimal userId = null;
            //string containingUri = null;
            //string filter = null;
            //bool? filterEmbeddable = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string sort = null;
            //var response = instance.GetPortfolioVideos(portfolioId, userId, containingUri, filter, filterEmbeddable, page, perPage, sort);
            //Assert.IsType<List<Video>> (response, "response is List<Video>");
        }
        
        /// <summary>
        /// Test GetPortfolioVideosAlt1
        /// </summary>
        [Fact]
        public void GetPortfolioVideosAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal portfolioId = null;
            //string containingUri = null;
            //string filter = null;
            //bool? filterEmbeddable = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string sort = null;
            //var response = instance.GetPortfolioVideosAlt1(portfolioId, containingUri, filter, filterEmbeddable, page, perPage, sort);
            //Assert.IsType<List<Video>> (response, "response is List<Video>");
        }
        
    }

}
