/* 
 * Vimeo API
 *
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using VimeoOpenApi.Client;
using VimeoOpenApi.Api;
using VimeoOpenApi.Model;

namespace VimeoOpenApi.Test
{
    /// <summary>
    ///  Class for testing VideosThumbnailsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class VideosThumbnailsApiTests : IDisposable
    {
        private VideosThumbnailsApi instance;

        public VideosThumbnailsApiTests()
        {
            instance = new VideosThumbnailsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of VideosThumbnailsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' VideosThumbnailsApi
            //Assert.IsType(typeof(VideosThumbnailsApi), instance, "instance is a VideosThumbnailsApi");
        }

        
        /// <summary>
        /// Test CreateVideoThumbnail
        /// </summary>
        [Fact]
        public void CreateVideoThumbnailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal videoId = null;
            //InlineObject59 inlineObject59 = null;
            //var response = instance.CreateVideoThumbnail(videoId, inlineObject59);
            //Assert.IsType<Picture> (response, "response is Picture");
        }
        
        /// <summary>
        /// Test CreateVideoThumbnailAlt1
        /// </summary>
        [Fact]
        public void CreateVideoThumbnailAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal channelId = null;
            //decimal videoId = null;
            //InlineObject12 inlineObject12 = null;
            //var response = instance.CreateVideoThumbnailAlt1(channelId, videoId, inlineObject12);
            //Assert.IsType<Picture> (response, "response is Picture");
        }
        
        /// <summary>
        /// Test DeleteVideoThumbnail
        /// </summary>
        [Fact]
        public void DeleteVideoThumbnailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal pictureId = null;
            //decimal videoId = null;
            //instance.DeleteVideoThumbnail(pictureId, videoId);
            
        }
        
        /// <summary>
        /// Test EditVideoThumbnail
        /// </summary>
        [Fact]
        public void EditVideoThumbnailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal pictureId = null;
            //decimal videoId = null;
            //InlineObject60 inlineObject60 = null;
            //var response = instance.EditVideoThumbnail(pictureId, videoId, inlineObject60);
            //Assert.IsType<Picture> (response, "response is Picture");
        }
        
        /// <summary>
        /// Test GetVideoThumbnail
        /// </summary>
        [Fact]
        public void GetVideoThumbnailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal pictureId = null;
            //decimal videoId = null;
            //var response = instance.GetVideoThumbnail(pictureId, videoId);
            //Assert.IsType<Picture> (response, "response is Picture");
        }
        
        /// <summary>
        /// Test GetVideoThumbnails
        /// </summary>
        [Fact]
        public void GetVideoThumbnailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal videoId = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //var response = instance.GetVideoThumbnails(videoId, page, perPage);
            //Assert.IsType<List<Picture>> (response, "response is List<Picture>");
        }
        
        /// <summary>
        /// Test GetVideoThumbnailsAlt1
        /// </summary>
        [Fact]
        public void GetVideoThumbnailsAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal channelId = null;
            //decimal videoId = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //var response = instance.GetVideoThumbnailsAlt1(channelId, videoId, page, perPage);
            //Assert.IsType<List<Picture>> (response, "response is List<Picture>");
        }
        
    }

}
