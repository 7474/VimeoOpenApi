/* 
 * Vimeo API
 *
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using VimeoOpenApi.Client;
using VimeoOpenApi.Api;
using VimeoOpenApi.Model;

namespace VimeoOpenApi.Test
{
    /// <summary>
    ///  Class for testing LikesEssentialsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class LikesEssentialsApiTests : IDisposable
    {
        private LikesEssentialsApi instance;

        public LikesEssentialsApiTests()
        {
            instance = new LikesEssentialsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LikesEssentialsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' LikesEssentialsApi
            //Assert.IsType(typeof(LikesEssentialsApi), instance, "instance is a LikesEssentialsApi");
        }

        
        /// <summary>
        /// Test CheckIfUserLikedVideo
        /// </summary>
        [Fact]
        public void CheckIfUserLikedVideoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal userId = null;
            //decimal videoId = null;
            //instance.CheckIfUserLikedVideo(userId, videoId);
            
        }
        
        /// <summary>
        /// Test CheckIfUserLikedVideoAlt1
        /// </summary>
        [Fact]
        public void CheckIfUserLikedVideoAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal videoId = null;
            //instance.CheckIfUserLikedVideoAlt1(videoId);
            
        }
        
        /// <summary>
        /// Test GetLikes
        /// </summary>
        [Fact]
        public void GetLikesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal userId = null;
            //string filter = null;
            //bool? filterEmbeddable = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string query = null;
            //string sort = null;
            //var response = instance.GetLikes(userId, filter, filterEmbeddable, page, perPage, query, sort);
            //Assert.IsType<List<Video>> (response, "response is List<Video>");
        }
        
        /// <summary>
        /// Test GetLikesAlt1
        /// </summary>
        [Fact]
        public void GetLikesAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //bool? filterEmbeddable = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string query = null;
            //string sort = null;
            //var response = instance.GetLikesAlt1(filter, filterEmbeddable, page, perPage, query, sort);
            //Assert.IsType<List<Video>> (response, "response is List<Video>");
        }
        
        /// <summary>
        /// Test GetVideoLikes
        /// </summary>
        [Fact]
        public void GetVideoLikesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal videoId = null;
            //string direction = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string sort = null;
            //var response = instance.GetVideoLikes(videoId, direction, page, perPage, sort);
            //Assert.IsType<List<User>> (response, "response is List<User>");
        }
        
        /// <summary>
        /// Test GetVideoLikesAlt1
        /// </summary>
        [Fact]
        public void GetVideoLikesAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal channelId = null;
            //decimal videoId = null;
            //string direction = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string sort = null;
            //var response = instance.GetVideoLikesAlt1(channelId, videoId, direction, page, perPage, sort);
            //Assert.IsType<List<User>> (response, "response is List<User>");
        }
        
        /// <summary>
        /// Test GetVodLikes
        /// </summary>
        [Fact]
        public void GetVodLikesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal ondemandId = null;
            //string direction = null;
            //string filter = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string sort = null;
            //var response = instance.GetVodLikes(ondemandId, direction, filter, page, perPage, sort);
            //Assert.IsType<List<User>> (response, "response is List<User>");
        }
        
        /// <summary>
        /// Test LikeVideo
        /// </summary>
        [Fact]
        public void LikeVideoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal userId = null;
            //decimal videoId = null;
            //instance.LikeVideo(userId, videoId);
            
        }
        
        /// <summary>
        /// Test LikeVideoAlt1
        /// </summary>
        [Fact]
        public void LikeVideoAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal videoId = null;
            //instance.LikeVideoAlt1(videoId);
            
        }
        
        /// <summary>
        /// Test UnlikeVideo
        /// </summary>
        [Fact]
        public void UnlikeVideoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal userId = null;
            //decimal videoId = null;
            //instance.UnlikeVideo(userId, videoId);
            
        }
        
        /// <summary>
        /// Test UnlikeVideoAlt1
        /// </summary>
        [Fact]
        public void UnlikeVideoAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal videoId = null;
            //instance.UnlikeVideoAlt1(videoId);
            
        }
        
    }

}
