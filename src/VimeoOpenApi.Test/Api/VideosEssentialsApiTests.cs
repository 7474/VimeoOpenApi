/* 
 * Vimeo API
 *
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using VimeoOpenApi.Client;
using VimeoOpenApi.Api;
using VimeoOpenApi.Model;

namespace VimeoOpenApi.Test
{
    /// <summary>
    ///  Class for testing VideosEssentialsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class VideosEssentialsApiTests : IDisposable
    {
        private VideosEssentialsApi instance;

        public VideosEssentialsApiTests()
        {
            instance = new VideosEssentialsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of VideosEssentialsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' VideosEssentialsApi
            //Assert.IsType(typeof(VideosEssentialsApi), instance, "instance is a VideosEssentialsApi");
        }

        
        /// <summary>
        /// Test CheckIfUserOwnsVideo
        /// </summary>
        [Fact]
        public void CheckIfUserOwnsVideoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal userId = null;
            //decimal videoId = null;
            //var response = instance.CheckIfUserOwnsVideo(userId, videoId);
            //Assert.IsType<Video> (response, "response is Video");
        }
        
        /// <summary>
        /// Test CheckIfUserOwnsVideoAlt1
        /// </summary>
        [Fact]
        public void CheckIfUserOwnsVideoAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal videoId = null;
            //var response = instance.CheckIfUserOwnsVideoAlt1(videoId);
            //Assert.IsType<Video> (response, "response is Video");
        }
        
        /// <summary>
        /// Test DeleteVideo
        /// </summary>
        [Fact]
        public void DeleteVideoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal videoId = null;
            //instance.DeleteVideo(videoId);
            
        }
        
        /// <summary>
        /// Test EditVideo
        /// </summary>
        [Fact]
        public void EditVideoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal videoId = null;
            //InlineObject51 inlineObject51 = null;
            //var response = instance.EditVideo(videoId, inlineObject51);
            //Assert.IsType<Video> (response, "response is Video");
        }
        
        /// <summary>
        /// Test GetAppearances
        /// </summary>
        [Fact]
        public void GetAppearancesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal userId = null;
            //string direction = null;
            //string filter = null;
            //bool? filterEmbeddable = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string query = null;
            //string sort = null;
            //var response = instance.GetAppearances(userId, direction, filter, filterEmbeddable, page, perPage, query, sort);
            //Assert.IsType<List<Video>> (response, "response is List<Video>");
        }
        
        /// <summary>
        /// Test GetAppearancesAlt1
        /// </summary>
        [Fact]
        public void GetAppearancesAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string direction = null;
            //string filter = null;
            //bool? filterEmbeddable = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string query = null;
            //string sort = null;
            //var response = instance.GetAppearancesAlt1(direction, filter, filterEmbeddable, page, perPage, query, sort);
            //Assert.IsType<List<Video>> (response, "response is List<Video>");
        }
        
        /// <summary>
        /// Test GetVideo
        /// </summary>
        [Fact]
        public void GetVideoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal videoId = null;
            //var response = instance.GetVideo(videoId);
            //Assert.IsType<Video> (response, "response is Video");
        }
        
        /// <summary>
        /// Test GetVideos
        /// </summary>
        [Fact]
        public void GetVideosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal userId = null;
            //string containingUri = null;
            //string direction = null;
            //string filter = null;
            //bool? filterEmbeddable = null;
            //bool? filterPlayable = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string query = null;
            //string sort = null;
            //var response = instance.GetVideos(userId, containingUri, direction, filter, filterEmbeddable, filterPlayable, page, perPage, query, sort);
            //Assert.IsType<List<Video>> (response, "response is List<Video>");
        }
        
        /// <summary>
        /// Test GetVideosAlt1
        /// </summary>
        [Fact]
        public void GetVideosAlt1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string containingUri = null;
            //string direction = null;
            //string filter = null;
            //bool? filterEmbeddable = null;
            //bool? filterPlayable = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string query = null;
            //string sort = null;
            //var response = instance.GetVideosAlt1(containingUri, direction, filter, filterEmbeddable, filterPlayable, page, perPage, query, sort);
            //Assert.IsType<List<Video>> (response, "response is List<Video>");
        }
        
        /// <summary>
        /// Test SearchVideos
        /// </summary>
        [Fact]
        public void SearchVideosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string query = null;
            //string direction = null;
            //string filter = null;
            //string links = null;
            //decimal? page = null;
            //decimal? perPage = null;
            //string sort = null;
            //string uris = null;
            //var response = instance.SearchVideos(query, direction, filter, links, page, perPage, sort, uris);
            //Assert.IsType<List<Video>> (response, "response is List<Video>");
        }
        
    }

}
