/* 
 * Vimeo API
 *
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using VimeoOpenApi.Client;
using VimeoOpenApi.Api;
using VimeoOpenApi.Model;

namespace VimeoOpenApi.Test
{
    /// <summary>
    ///  Class for testing OnDemandRegionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OnDemandRegionsApiTests : IDisposable
    {
        private OnDemandRegionsApi instance;

        public OnDemandRegionsApiTests()
        {
            instance = new OnDemandRegionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OnDemandRegionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OnDemandRegionsApi
            //Assert.IsType(typeof(OnDemandRegionsApi), instance, "instance is a OnDemandRegionsApi");
        }

        
        /// <summary>
        /// Test AddVodRegion
        /// </summary>
        [Fact]
        public void AddVodRegionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string country = null;
            //decimal ondemandId = null;
            //var response = instance.AddVodRegion(country, ondemandId);
            //Assert.IsType<OnDemandRegion> (response, "response is OnDemandRegion");
        }
        
        /// <summary>
        /// Test DeleteVodRegion
        /// </summary>
        [Fact]
        public void DeleteVodRegionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string country = null;
            //decimal ondemandId = null;
            //instance.DeleteVodRegion(country, ondemandId);
            
        }
        
        /// <summary>
        /// Test DeleteVodRegions
        /// </summary>
        [Fact]
        public void DeleteVodRegionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal ondemandId = null;
            //InlineObject35 inlineObject35 = null;
            //var response = instance.DeleteVodRegions(ondemandId, inlineObject35);
            //Assert.IsType<List<OnDemandRegion>> (response, "response is List<OnDemandRegion>");
        }
        
        /// <summary>
        /// Test GetRegion
        /// </summary>
        [Fact]
        public void GetRegionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string country = null;
            //var response = instance.GetRegion(country);
            //Assert.IsType<OnDemandRegion> (response, "response is OnDemandRegion");
        }
        
        /// <summary>
        /// Test GetRegions
        /// </summary>
        [Fact]
        public void GetRegionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetRegions();
            //Assert.IsType<List<OnDemandRegion>> (response, "response is List<OnDemandRegion>");
        }
        
        /// <summary>
        /// Test GetVodRegion
        /// </summary>
        [Fact]
        public void GetVodRegionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string country = null;
            //decimal ondemandId = null;
            //var response = instance.GetVodRegion(country, ondemandId);
            //Assert.IsType<OnDemandRegion> (response, "response is OnDemandRegion");
        }
        
        /// <summary>
        /// Test GetVodRegions
        /// </summary>
        [Fact]
        public void GetVodRegionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal ondemandId = null;
            //var response = instance.GetVodRegions(ondemandId);
            //Assert.IsType<List<OnDemandRegion>> (response, "response is List<OnDemandRegion>");
        }
        
        /// <summary>
        /// Test SetVodRegions
        /// </summary>
        [Fact]
        public void SetVodRegionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal ondemandId = null;
            //InlineObject34 inlineObject34 = null;
            //var response = instance.SetVodRegions(ondemandId, inlineObject34);
            //Assert.IsType<OnDemandRegion> (response, "response is OnDemandRegion");
        }
        
    }

}
