/* 
 * Vimeo API
 *
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using VimeoOpenApi.Api;
using VimeoOpenApi.Model;
using VimeoOpenApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace VimeoOpenApi.Test
{
    /// <summary>
    ///  Class for testing UserMetadataConnections
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UserMetadataConnectionsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for UserMetadataConnections
        //private UserMetadataConnections instance;

        public UserMetadataConnectionsTests()
        {
            // TODO uncomment below to create an instance of UserMetadataConnections
            //instance = new UserMetadataConnections();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserMetadataConnections
        /// </summary>
        [Fact]
        public void UserMetadataConnectionsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" UserMetadataConnections
            //Assert.IsInstanceOfType<UserMetadataConnections> (instance, "variable 'instance' is a UserMetadataConnections");
        }


        /// <summary>
        /// Test the property 'Albums'
        /// </summary>
        [Fact]
        public void AlbumsTest()
        {
            // TODO unit test for the property 'Albums'
        }
        /// <summary>
        /// Test the property 'Appearances'
        /// </summary>
        [Fact]
        public void AppearancesTest()
        {
            // TODO unit test for the property 'Appearances'
        }
        /// <summary>
        /// Test the property 'Block'
        /// </summary>
        [Fact]
        public void BlockTest()
        {
            // TODO unit test for the property 'Block'
        }
        /// <summary>
        /// Test the property 'Categories'
        /// </summary>
        [Fact]
        public void CategoriesTest()
        {
            // TODO unit test for the property 'Categories'
        }
        /// <summary>
        /// Test the property 'Channels'
        /// </summary>
        [Fact]
        public void ChannelsTest()
        {
            // TODO unit test for the property 'Channels'
        }
        /// <summary>
        /// Test the property 'ConnectedApps'
        /// </summary>
        [Fact]
        public void ConnectedAppsTest()
        {
            // TODO unit test for the property 'ConnectedApps'
        }
        /// <summary>
        /// Test the property 'Feed'
        /// </summary>
        [Fact]
        public void FeedTest()
        {
            // TODO unit test for the property 'Feed'
        }
        /// <summary>
        /// Test the property 'Folders'
        /// </summary>
        [Fact]
        public void FoldersTest()
        {
            // TODO unit test for the property 'Folders'
        }
        /// <summary>
        /// Test the property 'Followers'
        /// </summary>
        [Fact]
        public void FollowersTest()
        {
            // TODO unit test for the property 'Followers'
        }
        /// <summary>
        /// Test the property 'Following'
        /// </summary>
        [Fact]
        public void FollowingTest()
        {
            // TODO unit test for the property 'Following'
        }
        /// <summary>
        /// Test the property 'Groups'
        /// </summary>
        [Fact]
        public void GroupsTest()
        {
            // TODO unit test for the property 'Groups'
        }
        /// <summary>
        /// Test the property 'Likes'
        /// </summary>
        [Fact]
        public void LikesTest()
        {
            // TODO unit test for the property 'Likes'
        }
        /// <summary>
        /// Test the property 'ModeratedChannels'
        /// </summary>
        [Fact]
        public void ModeratedChannelsTest()
        {
            // TODO unit test for the property 'ModeratedChannels'
        }
        /// <summary>
        /// Test the property 'Pictures'
        /// </summary>
        [Fact]
        public void PicturesTest()
        {
            // TODO unit test for the property 'Pictures'
        }
        /// <summary>
        /// Test the property 'Portfolios'
        /// </summary>
        [Fact]
        public void PortfoliosTest()
        {
            // TODO unit test for the property 'Portfolios'
        }
        /// <summary>
        /// Test the property 'RecommendedChannels'
        /// </summary>
        [Fact]
        public void RecommendedChannelsTest()
        {
            // TODO unit test for the property 'RecommendedChannels'
        }
        /// <summary>
        /// Test the property 'RecommendedUsers'
        /// </summary>
        [Fact]
        public void RecommendedUsersTest()
        {
            // TODO unit test for the property 'RecommendedUsers'
        }
        /// <summary>
        /// Test the property 'Shared'
        /// </summary>
        [Fact]
        public void SharedTest()
        {
            // TODO unit test for the property 'Shared'
        }
        /// <summary>
        /// Test the property 'Videos'
        /// </summary>
        [Fact]
        public void VideosTest()
        {
            // TODO unit test for the property 'Videos'
        }
        /// <summary>
        /// Test the property 'WatchedVideos'
        /// </summary>
        [Fact]
        public void WatchedVideosTest()
        {
            // TODO unit test for the property 'WatchedVideos'
        }
        /// <summary>
        /// Test the property 'Watchlater'
        /// </summary>
        [Fact]
        public void WatchlaterTest()
        {
            // TODO unit test for the property 'Watchlater'
        }

    }

}
