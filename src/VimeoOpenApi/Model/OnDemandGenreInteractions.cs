/* 
 * Vimeo API
 *
 * Build something great. Vimeo's API supports flexible, high-quality video integration with your custom apps.
 *
 * The version of the OpenAPI document: 3.4
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = VimeoOpenApi.Client.OpenAPIDateConverter;

namespace VimeoOpenApi.Model
{
    /// <summary>
    /// OnDemandGenreInteractions
    /// </summary>
    [DataContract]
    public partial class OnDemandGenreInteractions :  IEquatable<OnDemandGenreInteractions>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OnDemandGenreInteractions" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OnDemandGenreInteractions() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OnDemandGenreInteractions" /> class.
        /// </summary>
        /// <param name="page">page (required).</param>
        public OnDemandGenreInteractions(OnDemandGenreInteractionsPage page = default(OnDemandGenreInteractionsPage))
        {
            // to ensure "page" is required (not null)
            this.Page = page ?? throw new ArgumentNullException("page is a required property for OnDemandGenreInteractions and cannot be null");
        }
        
        /// <summary>
        /// Gets or Sets Page
        /// </summary>
        [DataMember(Name="page", EmitDefaultValue=false)]
        public OnDemandGenreInteractionsPage Page { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OnDemandGenreInteractions {\n");
            sb.Append("  Page: ").Append(Page).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OnDemandGenreInteractions);
        }

        /// <summary>
        /// Returns true if OnDemandGenreInteractions instances are equal
        /// </summary>
        /// <param name="input">Instance of OnDemandGenreInteractions to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OnDemandGenreInteractions input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Page == input.Page ||
                    (this.Page != null &&
                    this.Page.Equals(input.Page))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Page != null)
                    hashCode = hashCode * 59 + this.Page.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
